public class FrmConfigServiceAddress : CommonDialog
{
    // Fields
    private ServiceConfig campusServiceSettings;
    private SavedAddressConfigSection savedAddressConfig;
    private EventHandler ExpireAllSessionsCalled;
    private IContainer components;
    private Label label1;
    private Button btnApply;
    private CommonToolStrip miniToolStrip;
    private Label lblMessage;
    private Label label2;
    private Button btnSave;
    private Button btnRemove;
    private Button btnLoad;
    private GroupBox groupBox1;
    private Label label4;
    private ListView lstSavedAddresses;
    private ColumnHeader columnHeader1;
    private ColumnHeader columnHeader2;
    private ColumnHeader columnHeader3;
    private PlaceholderTextBox tbxIpAddress;
    private PlaceholderTextBox tbxPort;
    private PlaceholderTextBox tbxServerName;

    // Events
    [EventPublication("ExpireAllSessionsCalled")]
    public event EventHandler ExpireAllSessionsCalled
    {
        add
        {
            EventHandler expireAllSessionsCalled = this.ExpireAllSessionsCalled;
            while (true)
            {
                EventHandler comparand = expireAllSessionsCalled;
                EventHandler handler3 = comparand + value;
                expireAllSessionsCalled = Interlocked.CompareExchange<EventHandler>(ref this.ExpireAllSessionsCalled, handler3, comparand);
                if (ReferenceEquals(expireAllSessionsCalled, comparand))
                {
                    return;
                }
            }
        }
        remove
        {
            EventHandler expireAllSessionsCalled = this.ExpireAllSessionsCalled;
            while (true)
            {
                EventHandler comparand = expireAllSessionsCalled;
                EventHandler handler3 = comparand - value;
                expireAllSessionsCalled = Interlocked.CompareExchange<EventHandler>(ref this.ExpireAllSessionsCalled, handler3, comparand);
                if (ReferenceEquals(expireAllSessionsCalled, comparand))
                {
                    return;
                }
            }
        }
    }

    // Methods
    public FrmConfigServiceAddress()
    {
        this.InitializeComponent();
        base.KeyPreview = true;
        this.btnApply.Click += new EventHandler(this.btnApply_Click);
        this.btnSave.Click += new EventHandler(this.btnSave_Click);
        this.btnLoad.Click += new EventHandler(this.btnLoad_Click);
        this.btnRemove.Click += new EventHandler(this.btnRemove_Click);
        this.lstSavedAddresses.MouseDoubleClick += new MouseEventHandler(this.lstSavedAddresses_MouseDoubleClick);
        this.lstSavedAddresses.SelectedIndexChanged += new EventHandler(this.lstSavedAddresses_SelectedIndexChanged);
    }

    private void btnApply_Click(object sender, EventArgs e)
    {
        this.lblMessage.Text = string.Empty;
        this.tbxIpAddress.Text = this.tbxIpAddress.Text.Trim();
        this.tbxPort.Text = this.tbxPort.Text.Trim();
        if (this.tbxIpAddress.Text.Length == 0)
        {
            this.lblMessage.Text = "Bạn chưa nhập địa chỉ IP!";
        }
        else if (this.tbxPort.Text.Length == 0)
        {
            this.lblMessage.Text = "Bạn chưa nhập địa chỉ cổng dịch vụ!";
        }
        else
        {
            ushort num;
            if (!ushort.TryParse(this.tbxPort.Text, out num))
            {
                this.lblMessage.Text = "Gi\x00e1 trị cổng dịch vụ kh\x00f4ng hợp lệ!";
            }
            else if (MessageBoxUtils.ShowConfirmMessage("Bạn c\x00f3 chắc muốn thay đổi cấu h\x00ecnh địa chỉ m\x00e1y chủ kh\x00f4ng? Lưu \x00fd l\x00e0 việc thay đổi địa chỉ dịch vụ sẽ l\x00e0m hủy tất cả phi\x00ean l\x00e0m việc hiện tại (nếu c\x00f3), người d\x00f9ng sẽ phải đăng nhập lại.") == DialogResult.Yes)
            {
                try
                {
                    Config.SetServiceAddress(typeof(IParkingService), this.tbxIpAddress.Text, num);
                }
                catch (Exception exception)
                {
                    this.lblMessage.Text = exception.Message;
                    return;
                }
                MessageBoxUtils.ShowInfoMessage("Đ\x00e3 thay đổi cấu h\x00ecnh địa chỉ m\x00e1y chủ th\x00e0nh c\x00f4ng!");
                base.Hide();
                if (this.ExpireAllSessionsCalled != null)
                {
                    this.ExpireAllSessionsCalled(this, EventArgs.Empty);
                }
            }
        }
    }

    private void btnLoad_Click(object sender, EventArgs e)
    {
        if (this.lstSavedAddresses.SelectedItems.Count == 1)
        {
            ListViewItem item = this.lstSavedAddresses.SelectedItems[0];
            this.tbxServerName.Text = string.Empty;
            this.tbxIpAddress.Text = item.SubItems[1].Text;
            this.tbxPort.Text = item.SubItems[2].Text;
        }
    }

    private void btnRemove_Click(object sender, EventArgs e)
    {
        if (this.lstSavedAddresses.SelectedItems.Count == 0)
        {
            this.lblMessage.Text = "Bạn chưa chọn d\x00f2ng cấu h\x00ecnh cần x\x00f3a!";
        }
        else if (this.lstSavedAddresses.SelectedItems.Count != 1)
        {
            this.lblMessage.Text = "Chức năng n\x00e0y chỉ cho ph\x00e9p thao t\x00e1c tr\x00ean từng d\x00f2ng cấu h\x00ecnh!";
        }
        else
        {
            ListViewItem item = this.lstSavedAddresses.SelectedItems[0];
            this.savedAddressConfig.Addresses.Remove(item.SubItems[0].Text);
            this.savedAddressConfig.Save();
            this.lstSavedAddresses.Items.Remove(item);
        }
    }

    private void btnSave_Click(object sender, EventArgs e)
    {
        this.lblMessage.Text = string.Empty;
        this.tbxIpAddress.Text = this.tbxIpAddress.Text.Trim();
        this.tbxPort.Text = this.tbxPort.Text.Trim();
        this.tbxServerName.Text = this.tbxServerName.Text.Trim();
        if (this.tbxIpAddress.Text.Length == 0)
        {
            this.lblMessage.Text = "Bạn chưa nhập địa chỉ IP!";
        }
        else if (this.tbxPort.Text.Length == 0)
        {
            this.lblMessage.Text = "Bạn chưa nhập địa chỉ cổng dịch vụ!";
        }
        else if (this.tbxServerName.Text.Length == 0)
        {
            this.lblMessage.Text = "Bạn chưa nhập t\x00ean m\x00e1y chủ!";
        }
        else
        {
            ushort num;
            if (!ushort.TryParse(this.tbxPort.Text, out num))
            {
                this.lblMessage.Text = "Gi\x00e1 trị cổng dịch vụ kh\x00f4ng hợp lệ!";
            }
            else
            {
                SavedAddressConfigElement element = new SavedAddressConfigElement {
                    Name = this.tbxServerName.Text,
                    IpAddress = this.tbxIpAddress.Text,
                    Port = this.tbxPort.Text
                };
                this.savedAddressConfig.Addresses.Add(element);
                this.savedAddressConfig.Save();
                ListViewItem item = new ListViewItem {
                    Text = this.tbxServerName.Text,
                    SubItems = { 
                        this.tbxIpAddress.Text,
                        this.tbxPort.Text
                    }
                };
                this.lstSavedAddresses.Items.Add(item);
            }
        }
    }

    protected override void Dispose(bool disposing)
    {
        if (disposing && (this.components != null))
        {
            this.components.Dispose();
        }
        base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
        this.label1 = new Label();
        this.btnApply = new Button();
        this.miniToolStrip = new CommonToolStrip();
        this.lblMessage = new Label();
        this.label2 = new Label();
        this.btnSave = new Button();
        this.btnRemove = new Button();
        this.btnLoad = new Button();
        this.groupBox1 = new GroupBox();
        this.tbxServerName = new PlaceholderTextBox();
        this.lstSavedAddresses = new ListView();
        this.columnHeader1 = new ColumnHeader();
        this.columnHeader2 = new ColumnHeader();
        this.columnHeader3 = new ColumnHeader();
        this.label4 = new Label();
        this.tbxIpAddress = new PlaceholderTextBox();
        this.tbxPort = new PlaceholderTextBox();
        this.groupBox1.SuspendLayout();
        base.SuspendLayout();
        this.label1.Dock = DockStyle.Top;
        this.label1.Location = new Point(5, 5);
        this.label1.Margin = new Padding(3);
        this.label1.Name = "label1";
        this.label1.Size = new Size(460, 0x2d);
        this.label1.TabIndex = 0;
        this.label1.Text = "Nhập địa chỉ của m\x00e1y chủ m\x00e0 bạn muốn kết nối đến. Lưu \x00fd l\x00e0 việc thay đổi địa chỉ dịch vụ sẽ l\x00e0m hủy tất cả phi\x00ean l\x00e0m việc hiện tại (nếu c\x00f3), người d\x00f9ng sẽ phải đăng nhập lại.";
        this.btnApply.Anchor = AnchorStyles.Right | AnchorStyles.Bottom;
        this.btnApply.Location = new Point(0x16a, 0x125);
        this.btnApply.Name = "btnApply";
        this.btnApply.Size = new Size(100, 30);
        this.btnApply.TabIndex = 13;
        this.btnApply.Text = "\x00c1p &Dụng...";
        this.btnApply.UseVisualStyleBackColor = true;
        this.miniToolStrip.AutoSize = false;
        this.miniToolStrip.CanOverflow = false;
        this.miniToolStrip.Dock = DockStyle.None;
        this.miniToolStrip.GripStyle = ToolStripGripStyle.Hidden;
        this.miniToolStrip.Location = new Point(0x99, 3);
        this.miniToolStrip.Name = "miniToolStrip";
        this.miniToolStrip.ShowItemToolTips = false;
        this.miniToolStrip.Size = new Size(0x1ca, 0x19);
        this.miniToolStrip.TabIndex = 5;
        this.lblMessage.Anchor = AnchorStyles.Right | AnchorStyles.Left | AnchorStyles.Bottom;
        this.lblMessage.ForeColor = Color.Red;
        this.lblMessage.Location = new Point(8, 0x125);
        this.lblMessage.Margin = new Padding(3);
        this.lblMessage.Name = "lblMessage";
        this.lblMessage.Size = new Size(0x15c, 30);
        this.lblMessage.TabIndex = 12;
        this.lblMessage.Text = "Một mai em nh\x00e9 c\x00f3 nghe thu về tr\x00ean h\x00e0ng l\x00e1 kh\x00f4...";
        this.lblMessage.TextAlign = ContentAlignment.MiddleLeft;
        this.label2.AutoSize = true;
        this.label2.Location = new Point(13, 0x3b);
        this.label2.Margin = new Padding(3);
        this.label2.Name = "label2";
        this.label2.Size = new Size(0xc4, 14);
        this.label2.TabIndex = 1;
        this.label2.Text = "Địa chỉ m\x00e1y chủ hiện đang kết nối:";
        this.btnSave.Location = new Point(0x173, 0x17);
        this.btnSave.Name = "btnSave";
        this.btnSave.Size = new Size(0x4b, 0x16);
        this.btnSave.TabIndex = 8;
        this.btnSave.Text = "&Lưu Lại";
        this.btnSave.UseVisualStyleBackColor = true;
        this.btnRemove.Anchor = AnchorStyles.Right | AnchorStyles.Top;
        this.btnRemove.Location = new Point(0x173, 0x51);
        this.btnRemove.Name = "btnRemove";
        this.btnRemove.Size = new Size(0x4b, 0x16);
        this.btnRemove.TabIndex = 11;
        this.btnRemove.Text = "&X\x00f3a Bỏ";
        this.btnRemove.UseVisualStyleBackColor = true;
        this.btnLoad.Anchor = AnchorStyles.Right | AnchorStyles.Top;
        this.btnLoad.Location = new Point(0x173, 0x34);
        this.btnLoad.Name = "btnLoad";
        this.btnLoad.Size = new Size(0x4b, 0x16);
        this.btnLoad.TabIndex = 10;
        this.btnLoad.Text = "&Tải";
        this.btnLoad.UseVisualStyleBackColor = true;
        this.groupBox1.Controls.Add(this.tbxServerName);
        this.groupBox1.Controls.Add(this.lstSavedAddresses);
        this.groupBox1.Controls.Add(this.btnSave);
        this.groupBox1.Controls.Add(this.btnLoad);
        this.groupBox1.Controls.Add(this.btnRemove);
        this.groupBox1.Location = new Point(8, 0x68);
        this.groupBox1.Name = "groupBox1";
        this.groupBox1.Padding = new Padding(5);
        this.groupBox1.Size = new Size(0x1c6, 0xb2);
        this.groupBox1.TabIndex = 6;
        this.groupBox1.TabStop = false;
        this.groupBox1.Text = "Danh s\x00e1ch c\x00e1c địa chỉ m\x00e1y chủ đ\x00e3 lưu lại";
        this.tbxServerName.Font = new Font("Tahoma", 9f);
        this.tbxServerName.ForeColor = Color.LightGray;
        this.tbxServerName.IsItalics = false;
        this.tbxServerName.Location = new Point(8, 0x17);
        this.tbxServerName.Name = "tbxServerName";
        this.tbxServerName.PlaceholderText = "Nhập t\x00ean m\x00e1y chủ";
        this.tbxServerName.Size = new Size(0x165, 0x16);
        this.tbxServerName.TabIndex = 7;
        ColumnHeader[] values = new ColumnHeader[] { this.columnHeader1, this.columnHeader2, this.columnHeader3 };
        this.lstSavedAddresses.Columns.AddRange(values);
        this.lstSavedAddresses.FullRowSelect = true;
        this.lstSavedAddresses.GridLines = true;
        this.lstSavedAddresses.HideSelection = false;
        this.lstSavedAddresses.Location = new Point(8, 0x33);
        this.lstSavedAddresses.MultiSelect = false;
        this.lstSavedAddresses.Name = "lstSavedAddresses";
        this.lstSavedAddresses.Size = new Size(0x165, 0x77);
        this.lstSavedAddresses.TabIndex = 9;
        this.lstSavedAddresses.UseCompatibleStateImageBehavior = false;
        this.lstSavedAddresses.View = View.Details;
        this.columnHeader1.Text = "T\x00ean M\x00e1y Chủ";
        this.columnHeader1.Width = 0xaf;
        this.columnHeader2.Text = "Địa Chỉ IP";
        this.columnHeader2.Width = 100;
        this.columnHeader3.Text = "Cổng";
        this.columnHeader3.Width = 0x4b;
        this.label4.AutoSize = true;
        this.label4.Location = new Point(8, 0x54);
        this.label4.Margin = new Padding(3);
        this.label4.Name = "label4";
        this.label4.Size = new Size(420, 14);
        this.label4.TabIndex = 5;
        this.label4.Text = "Nếu bạn muốn lưu lại địa chỉ n\x00e0y, nhập t\x00ean của m\x00e1y chủ rồi nhấn \"Lưu Lại\".";
        this.tbxIpAddress.Font = new Font("Tahoma", 9f);
        this.tbxIpAddress.ForeColor = Color.LightGray;
        this.tbxIpAddress.IsItalics = false;
        this.tbxIpAddress.Location = new Point(0xd7, 0x38);
        this.tbxIpAddress.MaxLength = 0x30;
        this.tbxIpAddress.Name = "tbxIpAddress";
        this.tbxIpAddress.PlaceholderText = "Nhập địa chỉ IP";
        this.tbxIpAddress.Size = new Size(0x9e, 0x16);
        this.tbxIpAddress.TabIndex = 2;
        this.tbxPort.Font = new Font("Tahoma", 9f);
        this.tbxPort.ForeColor = Color.LightGray;
        this.tbxPort.IsItalics = false;
        this.tbxPort.Location = new Point(0x17b, 0x38);
        this.tbxPort.MaxLength = 5;
        this.tbxPort.Name = "tbxPort";
        this.tbxPort.PlaceholderText = "Cổng";
        this.tbxPort.Size = new Size(0x4b, 0x16);
        this.tbxPort.TabIndex = 4;
        base.AcceptButton = this.btnApply;
        base.AutoScaleDimensions = new SizeF(7f, 14f);
        base.AutoScaleMode = AutoScaleMode.Font;
        base.ClientSize = new Size(470, 0x14b);
        base.Controls.Add(this.tbxPort);
        base.Controls.Add(this.tbxIpAddress);
        base.Controls.Add(this.label4);
        base.Controls.Add(this.groupBox1);
        base.Controls.Add(this.lblMessage);
        base.Controls.Add(this.label2);
        base.Controls.Add(this.btnApply);
        base.Controls.Add(this.label1);
        base.Name = "FrmConfigServiceAddress";
        this.Text = "Cấu H\x00ecnh Địa Chỉ M\x00e1y Chủ";
        this.groupBox1.ResumeLayout(false);
        this.groupBox1.PerformLayout();
        base.ResumeLayout(false);
        base.PerformLayout();
    }

    private void LoadSavedAddresses()
    {
        this.lstSavedAddresses.Items.Clear();
        this.savedAddressConfig = SavedAddressConfigSection.Open();
        foreach (SavedAddressConfigElement element in this.savedAddressConfig.Addresses)
        {
            ListViewItem item = new ListViewItem {
                Text = element.Name,
                SubItems = { 
                    element.IpAddress,
                    element.Port
                }
            };
            this.lstSavedAddresses.Items.Add(item);
        }
    }

    private void lstSavedAddresses_MouseDoubleClick(object sender, MouseEventArgs e)
    {
        if (e.Button == MouseButtons.Left)
        {
            this.btnLoad_Click(this, EventArgs.Empty);
        }
    }

    private void lstSavedAddresses_SelectedIndexChanged(object sender, EventArgs e)
    {
    }

    protected override void OnKeyDown(KeyEventArgs e)
    {
        base.OnKeyDown(e);
        if (e.KeyCode == Keys.Escape)
        {
            base.Hide();
        }
    }

    protected override void OnShown(EventArgs e)
    {
        base.OnShown(e);
        this.tbxIpAddress.Text = this.tbxPort.Text = string.Empty;
        this.lblMessage.Text = string.Empty;
        this.campusServiceSettings = Config.GetServiceConfig(typeof(IParkingService));
        string[] strArray = this.campusServiceSettings.Item.ServiceAddressPort.Split(new char[] { ':' }, StringSplitOptions.RemoveEmptyEntries);
        if (strArray.Length > 0)
        {
            this.tbxIpAddress.Text = strArray[0];
        }
        if (strArray.Length > 1)
        {
            this.tbxPort.Text = strArray[1];
        }
        this.LoadSavedAddresses();
        this.tbxIpAddress.Focus();
        this.tbxIpAddress.SelectAll();
    }
}

